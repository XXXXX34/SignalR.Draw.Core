#pragma checksum "D:\个人项目\教程-开讲\SignalR.Draw.Core\SignalR.Draw.Core\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "43d4a0843843ff70ad7d1cc9696a7063269ecee7"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Index.cshtml", typeof(AspNetCore.Views_Home_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\个人项目\教程-开讲\SignalR.Draw.Core\SignalR.Draw.Core\Views\_ViewImports.cshtml"
using SignalR.Draw.Core;

#line default
#line hidden
#line 2 "D:\个人项目\教程-开讲\SignalR.Draw.Core\SignalR.Draw.Core\Views\_ViewImports.cshtml"
using SignalR.Draw.Core.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"43d4a0843843ff70ad7d1cc9696a7063269ecee7", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a54f12fd14ef6fc072459f18181d11b6237d1802", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/signalr/signalr.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "D:\个人项目\教程-开讲\SignalR.Draw.Core\SignalR.Draw.Core\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
            BeginContext(45, 929, true);
            WriteLiteral(@"
<style type=""text/css"">
    .house {
        margin: 0;
        padding: 0;
    }

        .house .room {
            margin: 50px 10px;
            padding: 0;
            list-style-type: none;
            width: 200px;
            height: 200px;
            float: left;
        }

            .house .room .board {
                margin: 0;
                padding: 0 0 0 10px;
                border: 1px solid black;
                width: 200px;
                height: 200px;
                text-align: left;
                overflow: auto;
            }

            .house .room .name {
                width: 200px;
                height: 200px;
            }

            .house .room .input {
                width: 200px;
                height: 50px;
            }

                .house .room .input input {
                    width: 100%;
                }
</style>
");
            EndContext();
            BeginContext(974, 48, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "43d4a0843843ff70ad7d1cc9696a7063269ecee74645", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1022, 3269, true);
            WriteLiteral(@"
<script type=""text/javascript"">
    var connection = new signalR.HubConnectionBuilder().withUrl(""/chatHub"").build();

    connection.on(""ReceiveAsync"", function (message) {
        console.log(message);
        receive(message.roomName, message.userName, message.content);
    });

    connection.start().catch(function (err) {
        return console.error(err.toString());
    }).then(function () {
        inRoom(""broadcast"", myName, ""加入房间"");
    });


</script>

<script type=""text/javascript"">
    var myName = prompt(""enter your name"", ""man"");
    $(function () {

        $(""#txtMyName"").html(myName);

        $(""[name=content]"").keydown(function (event) {
            //send
            if (event.keyCode == ""13"") {
                var content = $(this).val();
                var roomName = $(this).parent().parent().attr(""name"");
                send(roomName, myName, content);
                $(this).val("""");
            }
        });

        $(""[name=in]"").click(function ()");
            WriteLiteral(@" {
            var roomName = $(this).parent().parent().attr(""name"");
            inRoom(roomName, myName, ""加入房间"");
            $(this).prop(""disabled"", ""disabled"");
            $(this).siblings(""button"").prop(""disabled"","""");
        });

        $(""[name=out]"").click(function () {
            var roomName = $(this).parent().parent().attr(""name"");
            outRoom(roomName, myName, ""离开房间"");
            $(this).prop(""disabled"", ""disabled"");
            $(this).siblings(""button"").prop(""disabled"", """");
        });
    })

    //send data
    function send(room, userName, content) {
        connection.invoke(""Send"", room, userName, content).catch(function (err) {
            return console.error(err.toString());
        });
    }

    //receive data
    function receive(room, userName, content) {
        renderContent(room, userName, content);
    }

    //out room
    function outRoom(room, userName, content) {
        connection.invoke(""OutRoom"", room, userName, content).catch(fu");
            WriteLiteral(@"nction (err) {
            return console.error(err.toString());
        });
    }

    //in room
    function inRoom(room, userName, content) {
        connection.invoke(""InRoom"", room, userName, content).catch(function (err) {
            return console.error(err.toString());
        });
    }

    //render data
    function renderContent(room, userName, content) {
        console.log(content);
        if (room == """") room = ""broadcast"";
        if (room == ""broadcast"" && content != ""离开房间"" && content != ""加入房间"") {
            $(""[name="" + room + ""] .board"").append(""<div>"" + userName + "" :"" + content + ""</div>"")
        }
        else {
            $(""[name="" + room + ""] .board"").append(""<div>"" + userName + "" :"" + content + ""</div>"")
        }
    }
</script>



<div class=""text-center"">
    <ul class=""house"">
        <li class=""room"" name=""broadcast"">
            <div class=""board"">
            </div>
            <div class=""input"">
                <input  name=""content"" plac");
            WriteLiteral("eholder=\"say:\" />\r\n            </div>\r\n            <div class=\"name\">\r\n                广播\r\n            </div>\r\n        </li>\r\n    </ul>\r\n    <div style=\"clear:both\"></div>\r\n    <ul class=\"house\">\r\n");
            EndContext();
#line 149 "D:\个人项目\教程-开讲\SignalR.Draw.Core\SignalR.Draw.Core\Views\Home\Index.cshtml"
         for (int i = 1; i < 10; i++)
        {

#line default
#line hidden
            BeginContext(4341, 28, true);
            WriteLiteral("            <li class=\"room\"");
            EndContext();
            BeginWriteAttribute("name", " name=\"", 4369, "\"", 4384, 2);
            WriteAttributeValue("", 4376, "room", 4376, 4, true);
#line 151 "D:\个人项目\教程-开讲\SignalR.Draw.Core\SignalR.Draw.Core\Views\Home\Index.cshtml"
WriteAttributeValue("", 4380, i, 4380, 4, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(4385, 248, true);
            WriteLiteral(">\r\n                <div class=\"board\">\r\n                </div>\r\n                <div class=\"input\">\r\n                    <input name=\"content\" placeholder=\"say:\" />\r\n                </div>\r\n                <div class=\"name\">\r\n                    房间");
            EndContext();
            BeginContext(4635, 1, false);
#line 158 "D:\个人项目\教程-开讲\SignalR.Draw.Core\SignalR.Draw.Core\Views\Home\Index.cshtml"
                  Write(i);

#line default
#line hidden
            EndContext();
            BeginContext(4637, 113, true);
            WriteLiteral("<button name=\"in\">加入</button><button name=\"out\" disabled>离开</button>\r\n                </div>\r\n            </li>\r\n");
            EndContext();
#line 161 "D:\个人项目\教程-开讲\SignalR.Draw.Core\SignalR.Draw.Core\Views\Home\Index.cshtml"
        }

#line default
#line hidden
            BeginContext(4761, 21, true);
            WriteLiteral("    </ul>\r\n\r\n</div>\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
